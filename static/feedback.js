/**
 * –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
 * –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏: Ctrl+Shift+B (Windows/Linux) –∏–ª–∏ Cmd+Shift+B (Mac)
 */

class FeedbackSystem {
    constructor() {
        this.modal = null;
        this.toast = null;
        this.isInitialized = false;
        this.init();
    }

    init() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => this.setup());
        } else {
            this.setup();
        }
    }

    setup() {
        if (this.isInitialized) return;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ body –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if (!document.getElementById('feedbackModal')) {
            this.loadModal();
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Bootstrap –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        this.modal = new bootstrap.Modal(document.getElementById('feedbackModal'));
        this.toast = new bootstrap.Toast(document.getElementById('feedbackToast'));

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.setupEventListeners();
        
        // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        this.setupHotkeys();
        
        // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        this.fillTechnicalInfo();
        
        this.isInitialized = true;
        console.log('üöÄ –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }

    loadModal() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —á–µ—Ä–µ–∑ AJAX
        fetch('/static/components/feedback_modal.html')
            .then(response => response.text())
            .then(html => {
                document.body.insertAdjacentHTML('beforeend', html);
                this.modal = new bootstrap.Modal(document.getElementById('feedbackModal'));
                this.toast = new bootstrap.Toast(document.getElementById('feedbackToast'));
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', error);
            });
    }

    setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
        document.addEventListener('click', (e) => {
            if (e.target.id === 'submitFeedback') {
                this.submitFeedback();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.addEventListener('show.bs.modal', (e) => {
            if (e.target.id === 'feedbackModal') {
                this.fillTechnicalInfo();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.addEventListener('hidden.bs.modal', (e) => {
            if (e.target.id === 'feedbackModal') {
                this.resetForm();
                this.removeBackdrop();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ backdrop –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('modal-backdrop')) {
                this.closeModal();
            }
        });
    }

    closeModal() {
        if (this.modal) {
            this.modal.hide();
            this.removeBackdrop();
        }
    }

    removeBackdrop() {
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ backdrop —ç–ª–µ–º–µ–Ω—Ç—ã
        const backdrops = document.querySelectorAll('.modal-backdrop');
        backdrops.forEach(backdrop => {
            backdrop.remove();
        });
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å modal-open —Å body
        document.body.classList.remove('modal-open');
        document.body.style.overflow = '';
        document.body.style.paddingRight = '';
    }

    setupHotkeys() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        if (window.innerWidth < 992) {
            console.log('üì± –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö');
            return;
        }
        
        document.addEventListener('keydown', (e) => {
            // Ctrl+Shift+B (Windows/Linux) –∏–ª–∏ Cmd+Shift+B (Mac)
            if ((e.ctrlKey || e.metaKey) && e.shiftKey && e.key === 'B') {
                e.preventDefault();
                this.openFeedbackModal();
            }
        });
    }

    openFeedbackModal() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        if (window.innerWidth < 992) {
            console.log('üì± –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö');
            return;
        }
        
        if (this.modal) {
            this.fillTechnicalInfo();
            this.modal.show();
        }
    }

    fillTechnicalInfo() {
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        const pageUrl = window.location.href;
        const pageTitle = document.title;
        const userAgent = navigator.userAgent;
        const screenSize = `${screen.width}x${screen.height}`;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é (–µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏)
        const isAuthenticated = this.checkAuthentication();
        const userName = this.getUserName();
        const userEmail = this.getUserEmail();

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è
        this.setFieldValue('feedbackPageUrl', pageUrl);
        this.setFieldValue('feedbackPageTitle', pageTitle);
        this.setFieldValue('feedbackUserAgent', userAgent);
        this.setFieldValue('feedbackScreenSize', screenSize);
        this.setFieldValue('feedbackIsAuthenticated', isAuthenticated);

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        if (isAuthenticated) {
            this.setFieldValue('feedbackName', userName);
            this.setFieldValue('feedbackEmail', userEmail);
        }
    }

    checkAuthentication() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π
        const userData = document.getElementById('userData');
        if (userData) {
            return userData.getAttribute('data-is-authenticated') === 'true';
        }
        return false;
    }

    getUserName() {
        // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π
        const userData = document.getElementById('userData');
        if (userData) {
            return userData.getAttribute('data-user-name') || '';
        }
        return '';
    }

    getUserEmail() {
        // –ü–æ–ª—É—á–∞–µ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π
        const userData = document.getElementById('userData');
        if (userData) {
            return userData.getAttribute('data-user-email') || '';
        }
        return '';
    }

    setFieldValue(fieldId, value) {
        const field = document.getElementById(fieldId);
        if (field) {
            field.value = value;
        }
    }

    async submitFeedback() {
        const submitBtn = document.getElementById('submitFeedback');
        const originalText = submitBtn.innerHTML;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.innerHTML = '<i class="bi bi-hourglass-split me-1"></i>–û—Ç–ø—Ä–∞–≤–∫–∞...';
        submitBtn.disabled = true;

        try {
            // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            const formData = this.collectFormData();
            
            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            if (!this.validateForm(formData)) {
                return;
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            const response = await this.sendFeedback(formData);
            
            if (response.success) {
                this.showSuccess('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
                this.modal.hide();
                this.resetForm();
            } else {
                this.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ' + response.message);
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:', error);
            this.showError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
        } finally {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        }
    }

    collectFormData() {
        return {
            type: document.getElementById('feedbackType').value,
            description: document.getElementById('feedbackDescription').value,
            suggestion: document.getElementById('feedbackSuggestion').value,
            page_url: document.getElementById('feedbackPageUrl').value,
            page_title: document.getElementById('feedbackPageTitle').value,
            user_agent: document.getElementById('feedbackUserAgent').value,
            screen_size: document.getElementById('feedbackScreenSize').value,
            user_name: document.getElementById('feedbackName').value,
            user_email: document.getElementById('feedbackEmail').value,
            is_authenticated: document.getElementById('feedbackIsAuthenticated').value
        };
    }

    validateForm(data) {
        if (!data.type) {
            this.showError('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è');
            return false;
        }
        
        if (!data.description.trim()) {
            this.showError('–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É');
            return false;
        }
        
        return true;
    }

    async sendFeedback(data) {
        const params = new URLSearchParams(data);
        const response = await fetch('/api/v1/feedback?' + params.toString(), {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        return await response.json();
    }

    resetForm() {
        document.getElementById('feedbackForm').reset();
        this.fillTechnicalInfo();
    }

    showSuccess(message) {
        const toastMessage = document.getElementById('feedbackToastMessage');
        if (toastMessage) {
            toastMessage.textContent = message;
            this.toast.show();
        }
    }

    showError(message) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        const modalBody = document.querySelector('#feedbackModal .modal-body');
        const errorDiv = document.createElement('div');
        errorDiv.className = 'alert alert-danger alert-dismissible fade show';
        errorDiv.innerHTML = `
            <i class="bi bi-exclamation-triangle me-2"></i>${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        
        modalBody.insertBefore(errorDiv, modalBody.firstChild);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (errorDiv.parentNode) {
                errorDiv.remove();
            }
        }, 5000);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
const feedbackSystem = new FeedbackSystem();

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
window.feedbackSystem = feedbackSystem; 