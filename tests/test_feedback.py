#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
"""

import asyncio
import json
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from services.telegram import TelegramService
from fastapi.testclient import TestClient
from main import app

def test_telegram_service():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å Telegram"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å Telegram...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
    telegram = TelegramService()
    
    # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    feedback_data = {
        "type": "bug",
        "description": "–ö–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "suggestion": "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É",
        "user_info": {
            "name": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
            "email": "test@example.com",
            "is_authenticated": True
        },
        "page_info": {
            "url": "https://example.com/page",
            "title": "–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞",
            "user_agent": "Mozilla/5.0...",
            "screen_size": "1920x1080"
        }
    }
    
    message = telegram.format_feedback_message(feedback_data)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    assert "üêõ" in message
    assert "–ö–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç" in message
    assert "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" in message
    assert "https://example.com/page" in message
    
    print("‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print(f"üìù –ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è:\n{message[:200]}...")

def test_feedback_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏...")
    
    client = TestClient(app)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    feedback_data = {
        "type": "feature",
        "description": "–•–æ—á—É –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é",
        "suggestion": "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–∏—Å–∫",
        "page_url": "https://example.com",
        "page_title": "–¢–µ—Å—Ç",
        "user_agent": "Mozilla/5.0",
        "screen_size": "1920x1080",
        "user_name": "–¢–µ—Å—Ç",
        "user_email": "test@example.com",
        "is_authenticated": "true"
    }
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    response = client.post("/api/v1/feedback", params=feedback_data)
    
    print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    print(f"üìã –û—Ç–≤–µ—Ç: {response.json()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ API –æ—Ç–≤–µ—á–∞–µ—Ç (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—à–∏–±–∫–∞ –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è Telegram –±–æ—Ç–∞)
    assert response.status_code in [200, 500]  # 500 –µ—Å–ª–∏ –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    
    print("‚úÖ API –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")

def test_feedback_types():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""
    print("\nüìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏...")
    
    telegram = TelegramService()
    
    types = [
        ("bug", "üêõ"),
        ("feature", "üí°"),
        ("improvement", "‚ö°"),
        ("other", "üìù")
    ]
    
    for feedback_type, expected_emoji in types:
        feedback_data = {
            "type": feedback_type,
            "description": f"–¢–µ—Å—Ç —Ç–∏–ø–∞ {feedback_type}",
            "suggestion": "",
            "user_info": {"name": "–¢–µ—Å—Ç", "email": "", "is_authenticated": False},
            "page_info": {"url": "", "title": "", "user_agent": "", "screen_size": ""}
        }
        
        message = telegram.format_feedback_message(feedback_data)
        assert expected_emoji in message
        print(f"‚úÖ –¢–∏–ø '{feedback_type}' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ ({expected_emoji})")

def test_hotkeys_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à–∞—Ö"""
    print("\n‚å®Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à–∞—Ö:")
    print("‚Ä¢ Windows/Linux: Ctrl + Shift + B")
    print("‚Ä¢ Mac: Cmd + Shift + B")
    print("‚Ä¢ –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –Ω–∞ –ª—é–±–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ")

def test_telegram_setup():
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Telegram"""
    print("\nü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞:")
    print("1. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather")
    print("2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
    print("3. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É")
    print("4. –ü–æ–ª—É—á–∏—Ç–µ chat_id –≥—Ä—É–ø–ø—ã")
    print("5. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print("   export TELEGRAM_BOT_TOKEN='–≤–∞—à_—Ç–æ–∫–µ–Ω'")
    print("   export TELEGRAM_CHAT_ID='–≤–∞—à_chat_id'")

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏\n")
    
    try:
        test_telegram_service()
        test_feedback_types()
        test_feedback_api()
        test_hotkeys_info()
        test_telegram_setup()
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 