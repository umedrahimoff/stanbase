from db import Base, engine, SessionLocal
import models
from models import Company, Investor, News, Podcast, Job, Event, Deal, User, Person, Country, City, Category, Author, PortfolioEntry, CompanyStage, Feedback, EmailTemplate
from datetime import date, datetime, timedelta
from sqlalchemy import func
from utils.security import get_password_hash
import os
import sys

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
environment = os.getenv("ENVIRONMENT", "development")

if environment == "production":
    print("üîß –°—Ä–µ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: PRODUCTION")
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü –∏ –±–∞–∑–æ–≤—ã–µ email —à–∞–±–ª–æ–Ω—ã.")
    print("–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ù–ï —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.")
else:
    print(f"üîß –°—Ä–µ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {environment.upper()}")

# –°–æ–∑–¥–∞—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
Base.metadata.create_all(bind=engine)

# –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –µ—Å–ª–∏ –±–∞–∑–∞ –ø—É—Å—Ç–∞ –ò –ù–ï –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
session = SessionLocal()

# --- –í—ã–º—ã—à–ª–µ–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¶–ê ---
ca_countries = [
    ("–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", ["–ê–ª–º–∞—Ç—ã", "–ê—Å—Ç–∞–Ω–∞", "–®—ã–º–∫–µ–Ω—Ç", "–ö–∞—Ä–∞–≥–∞–Ω–¥–∞", "–ê–∫—Ç–æ–±–µ"]),
    ("–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω", ["–¢–∞—à–∫–µ–Ω—Ç", "–°–∞–º–∞—Ä–∫–∞–Ω–¥", "–ë—É—Ö–∞—Ä–∞", "–ù–∞–º–∞–Ω–≥–∞–Ω", "–ê–Ω–¥–∏–∂–∞–Ω"]),
    ("–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω", ["–ë–∏—à–∫–µ–∫", "–û—à", "–î–∂–∞–ª–∞–ª-–ê–±–∞–¥", "–ö–∞—Ä–∞–∫–æ–ª", "–¢–æ–∫–º–æ–∫"]),
    ("–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω", ["–î—É—à–∞–Ω–±–µ", "–•—É–¥–∂–∞–Ω–¥", "–ë–æ—Ö—Ç–∞—Ä", "–ö—É–ª—è–±", "–ò—Å—Ç–∞—Ä–∞–≤—à–∞–Ω"]),
    ("–¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω", ["–ê—à—Ö–∞–±–∞–¥", "–¢—É—Ä–∫–º–µ–Ω–∞–±–∞–¥", "–î–∞—à–æ–≥—É–∑", "–ú–∞—Ä—ã", "–ë–∞–ª–∫–∞–Ω–∞–±–∞–¥"])
]
industries = ["Fintech", "SaaS", "AgriTech", "HealthTech", "Mobility", "CleanTech", "AI", "EdTech", "RetailTech", "LogisticsTech"]
stages = ["Seed", "Growth", "Scale", "Series A", "Series B"]

# –í—ã–º—ã—à–ª–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–π –±–µ–∑ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–≤—è–∑–æ–∫
company_names = [
    "TechFlow Labs", "InnovateHub", "DigitalBridge", "SmartCore", "FutureTech",
    "CloudMatrix", "DataVault", "GreenSolutions", "MobileFirst", "AI Nexus",
    "EduTech Pro", "RetailSmart", "LogiTech", "HealthSync", "AgroTech"
]

companies_data = []
for i in range(15):
    country, cities = ca_countries[i % len(ca_countries)]
    city = cities[i % len(cities)]
    industry = industries[i % len(industries)]
    stage = stages[i % len(stages)]
    name = company_names[i]
    companies_data.append({
        "name": name,
        "description": f"–í–µ–¥—É—â–∏–π –ø—Ä–æ–µ–∫—Ç –≤ —Å—Ñ–µ—Ä–µ {industry.lower()} –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞.",
        "country": country,
        "city": city,
        "stage": stage,
        "industry": industry,
        "website": f"https://{name.lower().replace(' ', '')}.com"
    })

# –í—ã–º—ã—à–ª–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–æ–Ω–¥–æ–≤ –±–µ–∑ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–≤—è–∑–æ–∫
fund_names = [
    "Steppe Angels", "Turan Ventures", "UzStart Capital", "Bishkek Angels", "Samarkand Fund",
    "Dushanbe Capital", "Ashgabat Ventures", "Kyrgyz Fund", "Tajik Capital", "Uzbek Angels",
    "Central Asia Fund", "Silk Road Ventures", "Nomad Capital", "Oasis Fund", "Desert Angels"
]

funds_data = []
for i in range(15):
    country, _ = ca_countries[i % len(ca_countries)]
    type_ = "angel" if i % 2 == 0 else "venture"
    focus = ", ".join([industries[(i+j)%len(industries)] for j in range(2)])
    name = fund_names[i]
    funds_data.append({
        "name": name,
        "description": f"{type_.capitalize()} —Ñ–æ–Ω–¥ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ {focus}.",
        "country": country,
        "focus": focus,
        "stages": ", ".join(stages[:2]),
        "website": f"https://{name.lower().replace(' ', '')}.com",
        "type": type_
    })

# --- –ö–æ–º–ø–∞–Ω–∏–∏ --- (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
if environment != "production" and not session.query(Company).first():
    print("–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏...")
    for s in companies_data:
        company = Company(
            name=s["name"],
            description=s["description"],
            country=s["country"],
            city=s["city"],
            stage=s["stage"],
            industry=s["industry"],
            founded_date=date(2020, 1, 1),
            website=s["website"]
        )
        session.add(company)
    session.commit()
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(companies_data)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π")

company_objs = session.query(Company).all()

# --- –ò–Ω–≤–µ—Å—Ç–æ—Ä—ã --- (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
if environment != "production" and not session.query(Investor).first():
    print("–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤...")
    for f in funds_data:
        investor = Investor(
            name=f["name"],
            description=f["description"],
            country=f["country"],
            focus=f["focus"],
            stages=f["stages"],
            website=f["website"],
            type=f["type"]
        )
        session.add(investor)
    session.commit()
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(funds_data)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤")

investor_objs = session.query(Investor).all()

# --- –ö–æ–º–∞–Ω–¥—ã –∫–æ–º–ø–∞–Ω–∏–π ---
team_roles = ["CEO", "CTO", "COO", "CMO", "Product Manager", "Lead Engineer", "HR", "Designer", "QA", "Data Scientist", "DevOps", "Sales", "Support", "Growth", "Finance"]
for i, company in enumerate(company_objs):
    if not company.team:
        for j in range(3):
            p = Person(name=f"Person {i*3+j+1}", role=team_roles[(i*3+j)%len(team_roles)], country=company.country)
            session.add(p)
            company.team.append(p)
session.commit()

# --- –í–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ ---
if not session.query(Job).first():
    job_titles = ["Backend Developer", "Frontend Developer", "Product Manager", "Data Scientist", "QA Engineer", "DevOps", "UI/UX Designer", "Sales Manager", "Support Specialist", "HR Manager", "Business Analyst", "Growth Hacker", "Finance Analyst", "Content Manager", "Marketing Specialist"]
    for i, company in enumerate(company_objs):
        session.add(Job(
            title=job_titles[i % len(job_titles)],
            description="–†–∞–±–æ—Ç–∞ –≤ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ. –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫, –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã.",
            company_id=company.id,
            city=company.city,
            job_type="Full-time" if i % 2 == 0 else "Remote",
            contact=f"hr@{company.website.split('//')[1]}",
            status="active"
        ))
session.commit()



# --- –°–¥–µ–ª–∫–∏ –∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏ ---
if not session.query(Deal).first():
    for i, company in enumerate(company_objs):
        invs = investor_objs[i % len(investor_objs): (i % len(investor_objs)) + 2]
        deal = Deal(
            type=stages[i % len(stages)],
            amount=500000 + i*100000,
            valuation=2000000 + i*500000,
            date=date(2023, 3, 15 + i),
            company_id=company.id,
            investors=", ".join([inv.name for inv in invs]),
            status="active"
        )
        session.add(deal)
        for inv in invs:
            if company not in inv.portfolio:
                inv.portfolio.append(company)
    session.commit()



# --- –ù–æ–≤–æ—Å—Ç–∏ ---
if not session.query(News).first():
    for i in range(15):
        company = company_objs[i % len(company_objs)]
        title = f"{company.name} –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞–ª –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç {i+1}"
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º slug –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        from main import generate_slug
        slug = generate_slug(title)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å slug
        counter = 1
        original_slug = slug
        while session.query(News).filter_by(slug=slug).first():
            slug = f"{original_slug}-{counter}"
            counter += 1
        
        summary_text = f"–ù–æ–≤–æ—Å—Ç–∏ –æ {company.name} - –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ê–∑–∏–∏."
        session.add(News(
            title=title,
            slug=slug,
            summary=summary_text,
            seo_description=summary_text,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º summary –∫–∞–∫ SEO –æ–ø–∏—Å–∞–Ω–∏–µ
            date=date.today() - timedelta(days=i),
            content=f"<p>–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –∑–∞–ø—É—Å–∫–µ, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö –∏ –ø–ª–∞–Ω–∞—Ö {company.name}.</p><p>–ö–æ–º–ø–∞–Ω–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ —Ä–∞—Å—à–∏—Ä—è—Ç—å —Å–≤–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ —Ä—ã–Ω–∫–µ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ê–∑–∏–∏.</p>",
            views=0,
            status='active',
            created_by='admin',
            author_id=None  # –ê–≤—Ç–æ—Ä –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
        ))
    session.commit()

# --- –ü–æ–¥–∫–∞—Å—Ç—ã ---
if not session.query(Podcast).first():
    for i in range(15):
        company = company_objs[i % len(company_objs)]
        session.add(Podcast(
            title=f"TechTalk {company.name} ‚Äî –≤—ã–ø—É—Å–∫ {i+1}",
            description=f"–û–±—Å—É–∂–¥–∞–µ–º —Ç—Ä–µ–Ω–¥—ã –∏ –∫–µ–π—Å—ã {company.name} –∏ —Ä—ã–Ω–∫–∞.",
            youtube_url='https://www.youtube.com/embed/dQw4w9WgXcQ',
            date=date.today() - timedelta(days=i*2),
            status='active'
        ))
    session.commit()

# --- –°–æ–±—ã—Ç–∏—è ---
if not session.query(Event).first():
    for i in range(15):
        city = company_objs[i % len(company_objs)].city
        session.add(Event(
            title=f"Tech Event {city} {i+1}",
            description=f"–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–æ –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –≤ {city}.",
            date=datetime.now() + timedelta(days=i),
            format='Online' if i % 2 == 0 else 'Offline',
            location=city,
            registration_url=f'https://event{i+1}.com',
            status='active'
        ))
    session.commit()

# --- –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ---
if not session.query(User).filter_by(email="admin@stanbase.test").first():
    admin_user = User(
        email="admin@stanbase.test",
        password=get_password_hash("admin123"),
        role="admin",
        first_name="Alice",
        last_name="Johnson",
        country_id=1,
        city="London",
        phone="+441234567890",
        status="active"
    )
    session.add(admin_user)
    session.commit()
if not session.query(User).filter_by(email="moderator@stanbase.test").first():
    moderator_user = User(
        email="moderator@stanbase.test",
        password=get_password_hash("mod123"),
        role="moderator",
        first_name="Bob",
        last_name="Smith",
        country_id=2,
        city="Berlin",
        phone="+491234567890",
        status="active"
    )
    session.add(moderator_user)
    session.commit()
if not session.query(User).filter_by(email="company_owner@stanbase.test").first():
    company = session.query(Company).first()
    if company:
        company_owner_user = User(
            email="company_owner@stanbase.test",
            password=get_password_hash("company_owner123"),
            role="company_owner",
            first_name="Charlie",
            last_name="Brown",
            country_id=3,
            city="Toronto",
            phone="+14161234567",
            company_id=company.id,
            status="active"
        )
        session.add(company_owner_user)
        session.commit()

# --- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ country, city, stage, industry –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ ---
def fix_company_fields():
    session = SessionLocal()
    from models import Company, Country, City, CompanyStage, Category
    companies = session.query(Company).all()
    for s in companies:
        # –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—É
        if s.country and s.country.isdigit():
            country = session.query(Country).get(int(s.country))
            if country:
                s.country = country.name
        # –ò—Å–ø—Ä–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥
        if s.city and s.city.isdigit():
            city = session.query(City).get(int(s.city))
            if city:
                s.city = city.name
        # –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞–¥–∏—é
        if s.stage and s.stage.isdigit():
            stage = session.query(CompanyStage).get(int(s.stage))
            if stage:
                s.stage = stage.name
        # –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∏–Ω–¥—É—Å—Ç—Ä–∏—é
        if s.industry and s.industry.isdigit():
            industry = session.query(Category).get(int(s.industry))
            if industry:
                s.industry = industry.name
    session.commit()
    session.close()

# --- –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ —Å—Ç—Ä–∞–Ω ---
central_asia_countries = ["–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω", "–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω", "–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω", "–¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω"]
if not session.query(Country).first():
    for name in central_asia_countries:
        session.add(Country(name=name, status="active"))
    session.commit()

# --- Email —à–∞–±–ª–æ–Ω—ã (—Å–æ–∑–¥–∞—é—Ç—Å—è –≤—Å–µ–≥–¥–∞, –≤–∫–ª—é—á–∞—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω) ---
if not session.query(EmailTemplate).first():
    print("–°–æ–∑–¥–∞–µ–º email —à–∞–±–ª–æ–Ω—ã...")
    email_templates = [
        {
            "name": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ",
            "code": "welcome",
            "subject": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Stanbase!",
            "html_content": """<h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Stanbase!</h2>
<p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {{ user_name }}!</p>
<p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ Stanbase - –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ê–∑–∏–∏.</p>
<p>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:</p>
<ul>
<li>–°–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏–π</li>
<li>–ù–∞—Ö–æ–¥–∏—Ç—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤</li>
<li>–ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏</li>
<li>–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–æ–±—ã—Ç–∏—è—Ö</li>
</ul>
<p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Stanbase</p>""",
            "text_content": """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Stanbase!

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {{ user_name }}!

–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ Stanbase - –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ê–∑–∏–∏.

–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:
- –°–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏–π
- –ù–∞—Ö–æ–¥–∏—Ç—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
- –ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏
- –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–æ–±—ã—Ç–∏—è—Ö

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Stanbase""",
            "description": "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "variables": '{"user_name": "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"}'
        },
        {
            "name": "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è",
            "code": "password_reset",
            "subject": "–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è - Stanbase",
            "html_content": """<h2>–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è</h2>
<p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</p>
<p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ Stanbase.</p>
<p>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è:</p>
<p><a href="{{ reset_url }}">–°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å</a></p>
<p>–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
<p>{{ reset_url }}</p>
<p>–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
<p>–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç.</p>
<p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Stanbase</p>""",
            "text_content": """–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ Stanbase.

–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:
{{ reset_url }}

–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.

–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Stanbase""",
            "description": "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è",
            "variables": '{"reset_url": "–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è"}'
        },
        {
            "name": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email",
            "code": "email_verification",
            "subject": "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email - Stanbase",
            "html_content": """<h2>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email</h2>
<p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {{ user_name }}!</p>
<p>–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å.</p>
<p>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</p>
<p><a href="{{ verification_url }}">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email</a></p>
<p>–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
<p>{{ verification_url }}</p>
<p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Stanbase</p>""",
            "text_content": """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {{ user_name }}!

–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å.

–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:
{{ verification_url }}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Stanbase""",
            "description": "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –∞–¥—Ä–µ—Å–∞",
            "variables": '{"user_name": "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "verification_url": "–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"}'
        },
        {
            "name": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
            "code": "notification",
            "subject": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ - Stanbase",
            "html_content": """<h2>{{ title }}</h2>
<p>{{ message }}</p>
<p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Stanbase</p>""",
            "text_content": """{{ title }}

{{ message }}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Stanbase""",
            "description": "–û–±—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
            "variables": '{"title": "–ó–∞–≥–æ–ª–æ–≤–æ–∫", "message": "–°–æ–æ–±—â–µ–Ω–∏–µ"}'
        },
        {
            "name": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏",
            "code": "feedback_notification",
            "subject": "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ - Stanbase",
            "html_content": """<h2>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</h2>
<p>–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</p>
<p><strong>–¢–∏–ø:</strong> {{ feedback_type }}</p>
<p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {{ description }}</p>
<p><strong>–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:</strong> {{ suggestion }}</p>
<p><strong>–ò–º—è:</strong> {{ name }}</p>
<p><strong>Email:</strong> {{ email }}</p>
<p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Stanbase</p>""",
            "text_content": """–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏

–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–¢–∏–ø: {{ feedback_type }}
–û–ø–∏—Å–∞–Ω–∏–µ: {{ description }}
–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: {{ suggestion }}
–ò–º—è: {{ name }}
Email: {{ email }}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Stanbase""",
            "description": "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏",
            "variables": '{"feedback_type": "–¢–∏–ø –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏", "description": "–û–ø–∏—Å–∞–Ω–∏–µ", "suggestion": "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", "name": "–ò–º—è", "email": "Email"}'
        }
    ]
    
    for template_data in email_templates:
        template = EmailTemplate(
            name=template_data["name"],
            code=template_data["code"],
            subject=template_data["subject"],
            html_content=template_data["html_content"],
            text_content=template_data["text_content"],
            description=template_data["description"],
            variables=template_data["variables"],
            is_active=True
        )
        session.add(template)
    session.commit()
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(email_templates)} email —à–∞–±–ª–æ–Ω–æ–≤")

if __name__ == "__main__":
    fix_company_fields()

session.close()

if environment == "production":
    print('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –∏ email —à–∞–±–ª–æ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã (–±–µ–∑ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö)!')
else:
    print('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –∏ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã (–µ—Å–ª–∏ –±–∞–∑–∞ –±—ã–ª–∞ –ø—É—Å—Ç–∞)!') 